# pal <- brewer.pal(9, "BuGn")[-(1:4)] #bluey green WC
pal <- brewer.pal(8, "Dark2") # multi coloured WC
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 7,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
WC
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color = "black",size=4) +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "#132B43", high = yello,
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color = "darkgray") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "#132B43", high = yellow,
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color = "darkgray") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "lightskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>7)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "lightskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>7)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>10)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
main("Twitter Frequency of the #FOSS4G_SOTM_OCEANIA Conference") +
footnote("Last 1465 tweets extracted from Twitter API on 28/11/18")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
title("Twitter Frequency of the #FOSS4G_SOTM_OCEANIA Conference") +
footnote("Last 1465 tweets extracted from Twitter API on 28/11/18")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("Twitter Frequency of the #FOSS4G_SOTM_OCEANIA Conference") +
footnote("Last 1465 tweets extracted from Twitter API on 28/11/18")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("Twitter Frequency of the #FOSS4G_SOTM_OCEANIA Conference") +
labs(caption="Last 1465 tweets extracted from Twitter API on 28/11/18")
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("Twitter Frequency of the #FOSS4G_SOTM_OCEANIA Conference") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
m <- as.matrix(tdm)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
# colors
# pal <- brewer.pal(9, "BuGn")[-(1:4)] #bluey green WC
pal <- brewer.pal(8, "Dark2") # multi coloured WC
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
WC
myStopwords <- c(setdiff(stopwords('english'), c("r", "the")),
"to", "of", "an","already","going","one","ht","last","neil","back","get","can","rt")
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
# count word frequence
wordFreq <- function(corpus, word) {
results <- lapply(MyCorpus,
function(x) { grep(as.character(x), pattern=paste0("\\<",word)) }
)
sum(unlist(results))
}
tdm <- TermDocumentMatrix(myCorpus,control = list(wordLengths = c(1, Inf)))
tdm
# Find frequent words
freq.terms <- findFreqTerms(tdm, lowfreq = 10)
# View the top frequent words
head(freq.terms,25)
# Calculate the word term frequency
term.freq <- rowSums(as.matrix(tdm))
term.freq <- subset(term.freq, term.freq >= 10)
df <- data.frame(term = names(term.freq), freq = term.freq)
ggplot(df, aes(x=term, y=freq)) +
geom_bar(stat="identity") +
xlab("Terms") +
ylab("Count") +
coord_flip() +
theme(axis.text=element_text(size=7))
m <- as.matrix(tdm)
# calculate the frequency of words and sort it by frequency
word.freq <- sort(rowSums(m), decreasing = T)
# colors
# pal <- brewer.pal(9, "BuGn")[-(1:4)] #bluey green WC
pal <- brewer.pal(8, "Dark2") # multi coloured WC
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
WC
##Generate an image file of the wordcloud
setwd("C:/Users/Home/Desktop")
dev.copy(WC, 'WC.png')
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 20,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 40,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
# plot word cloud
WC <- wordcloud(words = names(word.freq), freq = word.freq, min.freq = 10,
random.order = F, colors = pal, random.color= TRUE, max.words = 150)
tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
freq_plot <- tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
getwd()
ggsave(FOSS4GConf_MostTweetedv1,freq_plot)
ggsave("FOSS4GConf_MostTweetedv1.jpg",freq_plot)
# Save tweets
ggsave("tweets_df.csv",tweets.df)
# Save tweets
write_csv("tweets_df.csv",tweets.df)
# Save tweets
write_csv(tweets.df,"tweets_df.csv")
ggsave("FOSS4G_wc.jpg",wc)
ggsave("FOSS4G_wc.jpg",WC)
ggsave("FOSS4GConf_wc.jpg",WC)
setwd("~/")
tweets.df <- read_csv("tweets_df.csv")
# Load packages.. note if functions not working then reinstall packages and latest twitteR direct from github
# install.packages(c("devtools", "rjson", "bit64", "httr"))
# install.packages("devtools"); library(devtools)
# install_github("geoffjentry/twitteR")
library(twitteR)
library(ROAuth)
library(wordcloud)
library(tm) # text mining
library(SnowballC)
library(tidyverse)
tweets.df <- read_csv("tweets_df.csv")
# View the tweeters with location data available
tweets.df %>%
dplyr::filter(!is.na(latitude)) %>%
dplyr::count(screenName)
# Convert the longitude and latitide to numeric variables
tweets.df$latitude <- as.numeric(tweets.df$latitude)
tweets.df$longitude <- as.numeric(tweets.df$longitude)
# Plot a leaflet map of the tweets with location data
leaflet(tweets.df) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitude, lng = ~longitude)
library(leaflet)
# View the tweeters with location data available
tweets.df %>%
dplyr::filter(!is.na(latitude)) %>%
dplyr::count(screenName)
# Convert the longitude and latitide to numeric variables
tweets.df$latitude <- as.numeric(tweets.df$latitude)
tweets.df$longitude <- as.numeric(tweets.df$longitude)
# Plot a leaflet map of the tweets with location data available
leaflet(tweets.df) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitude, lng = ~longitude)
FOSS4G_Oceania<- getUser(FOSS4G_Oceania)
knitr::opts_chunk$set(echo = TRUE)
API_key <- c("VJBNPozw6F8xMs7jfjQGpnnjs",	"smRsRd4hS094wL19khksdO0LNcclZ45Px72gz28b3OjE7sXts0","800447204020219904-vNqfXBN6PfMmFQOhRkXfmNyEX3MMA6D","MjBmwdUfCR9mRYaOZyfS13JLpKk0811Qs24EzyTIqtxgb")
# Twitter authentication using private API_key variable
setup_twitter_oauth(API_key)
# Twitter authentication using R package twitteR and function setup_twitter_oauth("API key", "API secret")
setup_twitter_oauth("VJBNPozw6F8xMs7jfjQGpnnjs",	"smRsRd4hS094wL19khksdO0LNcclZ45Px72gz28b3OjE7sXts0","800447204020219904-vNqfXBN6PfMmFQOhRkXfmNyEX3MMA6D","MjBmwdUfCR9mRYaOZyfS13JLpKk0811Qs24EzyTIqtxgb")
API_key <- ("VJBNPozw6F8xMs7jfjQGpnnjs",	"smRsRd4hS094wL19khksdO0LNcclZ45Px72gz28b3OjE7sXts0","800447204020219904-vNqfXBN6PfMmFQOhRkXfmNyEX3MMA6D","MjBmwdUfCR9mRYaOZyfS13JLpKk0811Qs24EzyTIqtxgb")
setup_twitter_oauth("VJBNPozw6F8xMs7jfjQGpnnjs",	"smRsRd4hS094wL19khksdO0LNcclZ45Px72gz28b3OjE7sXts0","800447204020219904-vNqfXBN6PfMmFQOhRkXfmNyEX3MMA6D","MjBmwdUfCR9mRYaOZyfS13JLpKk0811Qs24EzyTIqtxgb")
FOSS4G_Oceania<- getUser(FOSS4G_Oceania)
FOSS4G_Oceania <- getUser('FOSS4G_Oceania')
FOSS4G_Oceania_df <- twListToDF(FOSS4G_Oceania)
FOSS4G_Oceania
# View the tweeters with location data available, ie filter out the NA values
tweets.df %>%
dplyr::filter(!is.na(latitude)) %>%
dplyr::count(screenName)
# View the tweeters with location data available, ie filter out the NA values
tweets.df %>%
dplyr::filter(!is.na(latitude)) %>%
dplyr::count(screenName,longitude,latitude)
# Plot a leaflet map of the tweets with location data available
leaflet(tweets.df) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitude, lng = ~longitude)
freq_plot <- tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
freq_plot
knitr::opts_chunk$set(echo = TRUE)
# Load the tidyverse metapackage for data manipulation
library(tidyverse)
# Load twitter packages.
# Note if twitteR functions do not work then reinstall packages and latest twitteR direct from github
# install.packages(c("devtools", "rjson", "bit64", "httr"))
# install.packages("devtools"); library(devtools)
# install_github("geoffjentry/twitteR")
library(twitteR)
library(ROAuth)
# Twitter authentication using private API_key variable saved in separate markdown document
# setup_twitter_oauth(API_key)
# Retrieve most recent tweets using the searchTwitter function
tweets <- searchTwitter("FOSS4G_SotM_Oceania",  n=2000,resultType = 'recent')
knitr::opts_chunk$set(echo = TRUE)
setup_twitter_oauth("VJBNPozw6F8xMs7jfjQGpnnjs",	"smRsRd4hS094wL19khksdO0LNcclZ45Px72gz28b3OjE7sXts0","800447204020219904-vNqfXBN6PfMmFQOhRkXfmNyEX3MMA6D","MjBmwdUfCR9mRYaOZyfS13JLpKk0811Qs24EzyTIqtxgb")
# Twitter authentication using private API_key variable saved in separate markdown document
# setup_twitter_oauth(API_key)
# Retrieve most recent tweets using the searchTwitter function
tweets <- searchTwitter("FOSS4G_SotM_Oceania",  n=2000,resultType = 'recent')
# Take a look at the first 6 tweets using head function
head(tweets)
# Convert List of tweets to a dataframe
tweets.df <- twListToDF(tweets)
# To reproduce the plots using the data retrieved on the 291118, read in the saved dataframe tweets_df_291118.csv
# tweets.df <- read_csv("tweets_df_291118.csv")
# Add TweetOrigin variable with Tweet, Retweet column using stringr R package as the existing isRetweet column doesn't appear have the correct categorisation.
tweets.df <- tweets.df %>%
mutate(TweetOrigin=ifelse(str_detect(text,"RT"),"Retweet","Tweet"))
# Convert the longitude and latitide to numeric variables
tweets.df$latitude <- as.numeric(tweets.df$latitude)
tweets.df$longitude <- as.numeric(tweets.df$longitude)
freq_plot <- tweets.df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet) %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Screen Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
freq_plot
# Print the actual number of tweets
dim(tweets)
# Print the actual number of tweets
length(tweets)
# Take a look at the first 6 tweets using head function
head(tweets)
tweets_df <- twListToDF(tweets)
# Take a look at the first 6 tweets in the dataframe using head function
head(tweets_df)
tweets_df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet)
tweets_df <- tweets_df %>%
mutate(TweetOrigin=ifelse(str_detect(text,"RT"),"Retweet","Tweet"))
# Convert the longitude and latitide to numeric variables
tweets_df$latitude <- as.numeric(tweets_df$latitude)
tweets_df$longitude <- as.numeric(tweets_df$longitude)
tweets_count <- tweets_df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet)
head(tweets_count)
tweets_count %>%
filter(screenName=="om_henners")
tweets_count %>%
filter(screenName=="underdarkGIS")
tweets_count %>%
filter(screenName=="ggisau")
tweets_count %>%
filter(screenName=="qgisau")
tweets_count %>%
filter(screenName=="alexgleith")
# Create a frequency plot of the tweets, ordered from largest to smallest, with cutoff total tweets of 6 and coloured by the TweetOrigin
freq_plot <- tweets_freq %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Screen Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
# Calculate a frequency table of the tweets wi
tweets_freq <- tweets_df %>%
count(screenName,TweetOrigin) %>%
spread(key = TweetOrigin,value=n,fill=0) %>%
mutate(TotalTweets=Retweet+Tweet)
# Create a frequency plot of the tweets, ordered from largest to smallest, with cutoff total tweets of 6 and coloured by the TweetOrigin
freq_plot <- tweets_freq %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Screen Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1465 tweets extracted from Twitter API on 28/11/18")
freq_plot
# Create a frequency plot of the tweets, ordered from largest to smallest, with cutoff total tweets of 6 and coloured by the TweetOrigin
freq_plot <- tweets_freq %>%
filter(TotalTweets>5)  %>%
ggplot(aes(reorder(screenName,TotalTweets),TotalTweets)) +
geom_col(aes(fill=Retweet)) +
scale_fill_gradient(low = "deepskyblue", high = "gold",
space = "Lab", na.value = "grey50", guide = "colourbar",
aesthetics = "fill") +
coord_flip() +
geom_text(aes(label = TotalTweets), nudge_y = 8, color =  "grey50") +
xlab("Twitter Screen Name") +
ylab("Total Tweets") +
ggtitle("#FOSS4G_SOTM_OCEANIA 2018 Conference Most Tweeted") +
labs(caption="Source: Last 1548 tweets extracted from Twitter API on 29/11/18")
freq_plot
ggsave("Freq_Plot_FOSS4G_SOTM_Oceania_Conf.jpg",freq_plot)
getwd()
ggsave("/NLPexmaples/Freq_Plot_FOSS4G_SOTM_Oceania_Conf.jpg",freq_plot)
ggsave("NLPexmaples/Freq_Plot_FOSS4G_SOTM_Oceania_Conf.jpg",freq_plot)
setwd("~/NLPexamples")
ggsave("Freq_Plot_FOSS4G_SOTM_Oceania_Conf.jpg",freq_plot)
freq_plot
